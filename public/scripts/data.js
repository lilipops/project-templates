export function GetUserData() {
    const userDataString = localStorage.getItem('user');
    if (userDataString) {
        try {
            const userData = JSON.parse(userDataString);
            if (typeof userData === 'object' && userData !== null) {
                const { username, avatarUrl } = userData;
                if (typeof username === 'string' && typeof avatarUrl === 'string') {
                    return { username, avatarUrl };
                }
            }
        }
        catch (e) {
            console.log(Error);
        }
    }
    return undefined;
}
export function GetFavoritesAmout() {
    const userFavoritesAmount = localStorage.getItem('favoritesAmount');
    if (userFavoritesAmount) {
        try {
            const favoritesAmount = JSON.parse(userFavoritesAmount);
            if (typeof favoritesAmount === 'number') {
                return favoritesAmount;
            }
        }
        catch (e) {
            console.log(Error);
        }
    }
    return undefined;
}
export function renderUserBlock(username, avatarUrl, favoritesAmount) {
    const userBlock = document.createElement('div');
    userBlock.classList.add('user-block');
    const avatarImage = document.createElement('img');
    avatarImage.src = avatarUrl;
    avatarImage.alt = `${username}'s avatar`;
    const usernameElement = document.createElement('span');
    usernameElement.textContent = username;
    const favoritesAmountElement = document.createElement('span');
    favoritesAmountElement.textContent = `${favoritesAmount !== null && favoritesAmount !== void 0 ? favoritesAmount : '0'} favorites`;
    userBlock.appendChild(avatarImage);
    userBlock.appendChild(usernameElement);
    userBlock.appendChild(favoritesAmountElement);
    document.body.appendChild(userBlock);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUtBLE1BQU0sVUFBVSxXQUFXO0lBQ3pCLE1BQU0sY0FBYyxHQUFHLFlBQVksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7SUFFcEQsSUFBRyxjQUFjLEVBQUU7UUFDakIsSUFBSTtZQUNGLE1BQU0sUUFBUSxHQUFZLElBQUksQ0FBQyxLQUFLLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDckQsSUFBRyxPQUFPLFFBQVEsS0FBSyxRQUFRLElBQUksUUFBUSxLQUFLLElBQUksRUFBRTtnQkFDcEQsTUFBTSxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQUUsR0FBRyxRQUFxRCxDQUFDO2dCQUV0RixJQUFJLE9BQU8sUUFBUSxLQUFLLFFBQVEsSUFBSSxPQUFPLFNBQVMsS0FBSyxRQUFRLEVBQUU7b0JBQ2pFLE9BQU8sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLENBQUM7aUJBQ2hDO2FBQ0Y7U0FDRjtRQUFDLE9BQU8sQ0FBQyxFQUFFO1lBQ1YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQTtTQUNuQjtLQUNGO0lBRUQsT0FBTyxTQUFTLENBQUE7QUFDbEIsQ0FBQztBQUlELE1BQU0sVUFBVSxpQkFBaUI7SUFDL0IsTUFBTSxtQkFBbUIsR0FBRSxZQUFZLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7SUFFbkUsSUFBRyxtQkFBbUIsRUFBRTtRQUN0QixJQUFJO1lBQ0YsTUFBTSxlQUFlLEdBQVksSUFBSSxDQUFDLEtBQUssQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1lBRWpFLElBQUcsT0FBTyxlQUFlLEtBQUssUUFBUSxFQUFFO2dCQUN0QyxPQUFPLGVBQWUsQ0FBQzthQUN4QjtTQUNGO1FBQUMsT0FBTSxDQUFDLEVBQUU7WUFDVCxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFBO1NBQ25CO0tBQ0Y7SUFDRCxPQUFPLFNBQVMsQ0FBQTtBQUNsQixDQUFDO0FBRUQsTUFBTSxVQUFVLGVBQWUsQ0FBQyxRQUFnQixFQUFFLFNBQWlCLEVBQUUsZUFBd0I7SUFDM0YsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNoRCxTQUFTLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQztJQUV0QyxNQUFNLFdBQVcsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2xELFdBQVcsQ0FBQyxHQUFHLEdBQUcsU0FBUyxDQUFDO0lBQzVCLFdBQVcsQ0FBQyxHQUFHLEdBQUcsR0FBRyxRQUFRLFdBQVcsQ0FBQztJQUV6QyxNQUFNLGVBQWUsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3ZELGVBQWUsQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDO0lBRXZDLE1BQU0sc0JBQXNCLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUM5RCxzQkFBc0IsQ0FBQyxXQUFXLEdBQUcsR0FBRyxlQUFlLGFBQWYsZUFBZSxjQUFmLGVBQWUsR0FBSSxHQUFHLFlBQVksQ0FBQztJQUUzRSxTQUFTLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ25DLFNBQVMsQ0FBQyxXQUFXLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDdkMsU0FBUyxDQUFDLFdBQVcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0lBRTlDLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBQ3ZDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbnRlcmZhY2UgVXNlckRhdGEge1xuICAgIHVzZXJuYW1lOiBzdHJpbmc7XG4gICAgYXZhdGFyVXJsOiBzdHJpbmc7XG4gIH1cblxuZXhwb3J0IGZ1bmN0aW9uIEdldFVzZXJEYXRhKCk6IFVzZXJEYXRhIHwgdW5kZWZpbmVkIHtcbiAgY29uc3QgdXNlckRhdGFTdHJpbmcgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcicpO1xuXG4gIGlmKHVzZXJEYXRhU3RyaW5nKSB7XG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHVzZXJEYXRhOiB1bmtub3duID0gSlNPTi5wYXJzZSh1c2VyRGF0YVN0cmluZyk7XG4gICAgICBpZih0eXBlb2YgdXNlckRhdGEgPT09ICdvYmplY3QnICYmIHVzZXJEYXRhICE9PSBudWxsKSB7XG4gICAgICAgIGNvbnN0IHsgdXNlcm5hbWUsIGF2YXRhclVybCB9ID0gdXNlckRhdGEgYXMgeyB1c2VybmFtZTogdW5rbm93biwgYXZhdGFyVXJsOiB1bmtub3duIH07XG4gICAgICAgIFxuICAgICAgICBpZiAodHlwZW9mIHVzZXJuYW1lID09PSAnc3RyaW5nJyAmJiB0eXBlb2YgYXZhdGFyVXJsID09PSAnc3RyaW5nJykge1xuICAgICAgICAgIHJldHVybiB7IHVzZXJuYW1lLCBhdmF0YXJVcmwgfTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIGNvbnNvbGUubG9nKEVycm9yKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB1bmRlZmluZWRcbn1cblxuXG5cbmV4cG9ydCBmdW5jdGlvbiBHZXRGYXZvcml0ZXNBbW91dCgpOiBudW1iZXIgfCB1bmRlZmluZWQge1xuICBjb25zdCB1c2VyRmF2b3JpdGVzQW1vdW50PSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnZmF2b3JpdGVzQW1vdW50Jyk7XG5cbiAgaWYodXNlckZhdm9yaXRlc0Ftb3VudCkge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCBmYXZvcml0ZXNBbW91bnQ6IHVua25vd24gPSBKU09OLnBhcnNlKHVzZXJGYXZvcml0ZXNBbW91bnQpO1xuICAgICAgICBcbiAgICAgIGlmKHR5cGVvZiBmYXZvcml0ZXNBbW91bnQgPT09ICdudW1iZXInKSB7XG4gICAgICAgIHJldHVybiBmYXZvcml0ZXNBbW91bnQ7XG4gICAgICB9XG4gICAgfSBjYXRjaChlKSB7XG4gICAgICBjb25zb2xlLmxvZyhFcnJvcilcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHVuZGVmaW5lZFxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVuZGVyVXNlckJsb2NrKHVzZXJuYW1lOiBzdHJpbmcsIGF2YXRhclVybDogc3RyaW5nLCBmYXZvcml0ZXNBbW91bnQ/OiBudW1iZXIpOiB2b2lkIHtcbiAgY29uc3QgdXNlckJsb2NrID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIHVzZXJCbG9jay5jbGFzc0xpc3QuYWRkKCd1c2VyLWJsb2NrJyk7XG4gIFxuICBjb25zdCBhdmF0YXJJbWFnZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ltZycpO1xuICBhdmF0YXJJbWFnZS5zcmMgPSBhdmF0YXJVcmw7XG4gIGF2YXRhckltYWdlLmFsdCA9IGAke3VzZXJuYW1lfSdzIGF2YXRhcmA7XG4gIFxuICBjb25zdCB1c2VybmFtZUVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gIHVzZXJuYW1lRWxlbWVudC50ZXh0Q29udGVudCA9IHVzZXJuYW1lO1xuICBcbiAgY29uc3QgZmF2b3JpdGVzQW1vdW50RWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NwYW4nKTtcbiAgZmF2b3JpdGVzQW1vdW50RWxlbWVudC50ZXh0Q29udGVudCA9IGAke2Zhdm9yaXRlc0Ftb3VudCA/PyAnMCd9IGZhdm9yaXRlc2A7XG4gIFxuICB1c2VyQmxvY2suYXBwZW5kQ2hpbGQoYXZhdGFySW1hZ2UpO1xuICB1c2VyQmxvY2suYXBwZW5kQ2hpbGQodXNlcm5hbWVFbGVtZW50KTtcbiAgdXNlckJsb2NrLmFwcGVuZENoaWxkKGZhdm9yaXRlc0Ftb3VudEVsZW1lbnQpO1xuICBcbiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh1c2VyQmxvY2spO1xufVxuICAiXX0=