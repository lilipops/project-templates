import { renderSearchFormBlock } from './search-form.js';
import { renderSearchStubBlock } from './search-results.js';
import { getNextDay } from './search-form.js';
import { renderUserBlock } from './user.js';
import { renderToast } from './lib.js';
import { getFavoritesAmount } from './data.js';
import { GetUserData } from './data.js';
window.addEventListener('DOMContentLoaded', () => {
    const { username, avatarUrl } = GetUserData();
    const favoritesAmount = getFavoritesAmount();
    renderUserBlock(username, avatarUrl, favoritesAmount);
    const checkInDate = getNextDay(1);
    const checkOutDate = getNextDay(3);
    renderSearchFormBlock(checkInDate, checkOutDate);
    renderSearchStubBlock();
    renderToast({ text: 'Это пример уведомления. Используйте его при необходимости', type: 'success' }, { name: 'Понял', handler: () => { console.log('Уведомление закрыто'); } });
    const searchForm = document.querySelector('#search-form');
    searchForm.addEventListener('submit', (event) => {
        event.preventDefault();
        const searchData = {
            checkIn: new Date(document.querySelector('#date-from').value),
            checkOut: new Date(document.querySelector('#date-to').value),
            provider: document.querySelector('#provider').value,
            maxPrice: document.querySelector('#max-price').value ? parseInt(document.querySelector('#max-price').value, 10) : undefined,
        };
        search(searchData.checkIn, searchData.checkOut, searchData.maxPrice);
    });
});
function dateToUnixStamp(date) {
    return date.getTime() / 1000;
}
function responseToJson(requestPromise) {
    return requestPromise
        .then((response) => {
        return response.text();
    })
        .then((response) => {
        return JSON.parse(response);
    });
}
export function search(checkInDate, checkOutDate, maxPrice) {
    let url = 'http://localhost:3030/places?' +
        `checkInDate=${dateToUnixStamp(checkInDate)}&` +
        `checkOutDate=${dateToUnixStamp(checkOutDate)}&` +
        'coordinates=59.9386,30.3141';
    if (maxPrice != null) {
        url += `&maxPrice=${maxPrice}`;
    }
    return responseToJson(fetch(url));
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDekQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDNUQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDNUMsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFVBQVUsQ0FBQztBQUN2QyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUd4QyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUUsR0FBRyxFQUFFO0lBQy9DLE1BQU0sRUFBRSxRQUFRLEVBQUUsU0FBUyxFQUFFLEdBQUcsV0FBVyxFQUFFLENBQUM7SUFDOUMsTUFBTSxlQUFlLEdBQUcsa0JBQWtCLEVBQUUsQ0FBQztJQUM3QyxlQUFlLENBQUMsUUFBUSxFQUFFLFNBQVMsRUFBRSxlQUFlLENBQUMsQ0FBQztJQUV0RCxNQUFNLFdBQVcsR0FBRyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDbEMsTUFBTSxZQUFZLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ25DLHFCQUFxQixDQUFDLFdBQVcsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUNqRCxxQkFBcUIsRUFBRSxDQUFDO0lBQ3hCLFdBQVcsQ0FDVCxFQUFFLElBQUksRUFBRSwyREFBMkQsRUFBRSxJQUFJLEVBQUUsU0FBUyxFQUFFLEVBQ3RGLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxPQUFPLEVBQUUsR0FBRyxFQUFFLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFBLENBQUMsQ0FBQyxFQUFFLENBQ3pFLENBQUE7SUFFRCxNQUFNLFVBQVUsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLGNBQWMsQ0FBb0IsQ0FBQztJQUM3RSxVQUFVLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLENBQUMsS0FBSyxFQUFFLEVBQUU7UUFDOUMsS0FBSyxDQUFDLGNBQWMsRUFBRSxDQUFDO1FBQ3ZCLE1BQU0sVUFBVSxHQUFtQjtZQUNqQyxPQUFPLEVBQUUsSUFBSSxJQUFJLENBQUUsUUFBUSxDQUFDLGFBQWEsQ0FBQyxZQUFZLENBQXNCLENBQUMsS0FBSyxDQUFDO1lBQ25GLFFBQVEsRUFBRSxJQUFJLElBQUksQ0FBRSxRQUFRLENBQUMsYUFBYSxDQUFDLFVBQVUsQ0FBc0IsQ0FBQyxLQUFLLENBQUM7WUFDbEYsUUFBUSxFQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsV0FBVyxDQUF1QixDQUFDLEtBQUs7WUFDMUUsUUFBUSxFQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFzQixDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFFLFFBQVEsQ0FBQyxhQUFhLENBQUMsWUFBWSxDQUFzQixDQUFDLEtBQUssRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsU0FBUztTQUN4SyxDQUFDO1FBQ0YsTUFBTSxDQUFDLFVBQVUsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdkUsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQztBQVNILFNBQVMsZUFBZSxDQUFDLElBQVU7SUFDakMsT0FBTyxJQUFJLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDO0FBQy9CLENBQUM7QUFFRCxTQUFTLGNBQWMsQ0FBQyxjQUFpQztJQUN2RCxPQUFPLGNBQWM7U0FDbEIsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUU7UUFDakIsT0FBTyxRQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDekIsQ0FBQyxDQUFDO1NBQ0QsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUU7UUFDakIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzlCLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQUVELE1BQU0sVUFBVSxNQUFNLENBQUMsV0FBaUIsRUFBRSxZQUFrQixFQUFFLFFBQWlCO0lBQzdFLElBQUksR0FBRyxHQUFHLCtCQUErQjtRQUN2QyxlQUFlLGVBQWUsQ0FBQyxXQUFXLENBQUMsR0FBRztRQUM5QyxnQkFBZ0IsZUFBZSxDQUFDLFlBQVksQ0FBQyxHQUFHO1FBQ2hELDZCQUE2QixDQUFDO0lBRWhDLElBQUksUUFBUSxJQUFJLElBQUksRUFBRTtRQUNwQixHQUFHLElBQUksYUFBYSxRQUFRLEVBQUUsQ0FBQztLQUNoQztJQUVELE9BQU8sY0FBYyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBQ3BDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IHJlbmRlclNlYXJjaEZvcm1CbG9jayB9IGZyb20gJy4vc2VhcmNoLWZvcm0uanMnO1xuaW1wb3J0IHsgcmVuZGVyU2VhcmNoU3R1YkJsb2NrIH0gZnJvbSAnLi9zZWFyY2gtcmVzdWx0cy5qcyc7XG5pbXBvcnQgeyBnZXROZXh0RGF5IH0gZnJvbSAnLi9zZWFyY2gtZm9ybS5qcyc7XG5pbXBvcnQgeyByZW5kZXJVc2VyQmxvY2sgfSBmcm9tICcuL3VzZXIuanMnO1xuaW1wb3J0IHsgcmVuZGVyVG9hc3QgfSBmcm9tICcuL2xpYi5qcyc7XG5pbXBvcnQgeyBnZXRGYXZvcml0ZXNBbW91bnQgfSBmcm9tICcuL2RhdGEuanMnO1xuaW1wb3J0IHsgR2V0VXNlckRhdGEgfSBmcm9tICcuL2RhdGEuanMnO1xuXG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgKCkgPT4ge1xuICBjb25zdCB7IHVzZXJuYW1lLCBhdmF0YXJVcmwgfSA9IEdldFVzZXJEYXRhKCk7XG4gIGNvbnN0IGZhdm9yaXRlc0Ftb3VudCA9IGdldEZhdm9yaXRlc0Ftb3VudCgpO1xuICByZW5kZXJVc2VyQmxvY2sodXNlcm5hbWUsIGF2YXRhclVybCwgZmF2b3JpdGVzQW1vdW50KTtcblxuICBjb25zdCBjaGVja0luRGF0ZSA9IGdldE5leHREYXkoMSk7XG4gIGNvbnN0IGNoZWNrT3V0RGF0ZSA9IGdldE5leHREYXkoMyk7XG4gIHJlbmRlclNlYXJjaEZvcm1CbG9jayhjaGVja0luRGF0ZSwgY2hlY2tPdXREYXRlKTtcbiAgcmVuZGVyU2VhcmNoU3R1YkJsb2NrKCk7XG4gIHJlbmRlclRvYXN0KFxuICAgIHsgdGV4dDogJ9Ct0YLQviDQv9GA0LjQvNC10YAg0YPQstC10LTQvtC80LvQtdC90LjRjy4g0JjRgdC/0L7Qu9GM0LfRg9C50YLQtSDQtdCz0L4g0L/RgNC4INC90LXQvtCx0YXQvtC00LjQvNC+0YHRgtC4JywgdHlwZTogJ3N1Y2Nlc3MnIH0sXG4gICAgeyBuYW1lOiAn0J/QvtC90Y/QuycsIGhhbmRsZXI6ICgpID0+IHsgY29uc29sZS5sb2coJ9Cj0LLQtdC00L7QvNC70LXQvdC40LUg0LfQsNC60YDRi9GC0L4nKSB9IH1cbiAgKVxuXG4gIGNvbnN0IHNlYXJjaEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjc2VhcmNoLWZvcm0nKSBhcyBIVE1MRm9ybUVsZW1lbnQ7XG4gIHNlYXJjaEZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICBjb25zdCBzZWFyY2hEYXRhOiBTZWFyY2hGb3JtRGF0YSA9IHtcbiAgICAgIGNoZWNrSW46IG5ldyBEYXRlKChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZGF0ZS1mcm9tJykgYXMgSFRNTElucHV0RWxlbWVudCkudmFsdWUpLFxuICAgICAgY2hlY2tPdXQ6IG5ldyBEYXRlKChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZGF0ZS10bycpIGFzIEhUTUxJbnB1dEVsZW1lbnQpLnZhbHVlKSxcbiAgICAgIHByb3ZpZGVyOiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Byb3ZpZGVyJykgYXMgSFRNTFNlbGVjdEVsZW1lbnQpLnZhbHVlLFxuICAgICAgbWF4UHJpY2U6IChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbWF4LXByaWNlJykgYXMgSFRNTElucHV0RWxlbWVudCkudmFsdWUgPyBwYXJzZUludCgoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI21heC1wcmljZScpIGFzIEhUTUxJbnB1dEVsZW1lbnQpLnZhbHVlLCAxMCkgOiB1bmRlZmluZWQsXG4gICAgfTtcbiAgICBzZWFyY2goc2VhcmNoRGF0YS5jaGVja0luLCBzZWFyY2hEYXRhLmNoZWNrT3V0LCBzZWFyY2hEYXRhLm1heFByaWNlKTtcbiAgfSk7XG59KTtcblxuZXhwb3J0IGludGVyZmFjZSBTZWFyY2hGb3JtRGF0YSB7XG4gIGNoZWNrSW46IERhdGU7XG4gIGNoZWNrT3V0OiBEYXRlO1xuICBwcm92aWRlcjogc3RyaW5nO1xuICBtYXhQcmljZT86IG51bWJlcjtcbn1cblxuZnVuY3Rpb24gZGF0ZVRvVW5peFN0YW1wKGRhdGU6IERhdGUpOiBudW1iZXIge1xuICByZXR1cm4gZGF0ZS5nZXRUaW1lKCkgLyAxMDAwO1xufVxuXG5mdW5jdGlvbiByZXNwb25zZVRvSnNvbihyZXF1ZXN0UHJvbWlzZTogUHJvbWlzZTxSZXNwb25zZT4pOiBQcm9taXNlPHVua25vd24+IHtcbiAgcmV0dXJuIHJlcXVlc3RQcm9taXNlXG4gICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICByZXR1cm4gcmVzcG9uc2UudGV4dCgpO1xuICAgIH0pXG4gICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgICByZXR1cm4gSlNPTi5wYXJzZShyZXNwb25zZSk7XG4gICAgfSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2goY2hlY2tJbkRhdGU6IERhdGUsIGNoZWNrT3V0RGF0ZTogRGF0ZSwgbWF4UHJpY2U/OiBudW1iZXIpOiBQcm9taXNlPHVua25vd24+IHtcbiAgbGV0IHVybCA9ICdodHRwOi8vbG9jYWxob3N0OjMwMzAvcGxhY2VzPycgK1xuICAgIGBjaGVja0luRGF0ZT0ke2RhdGVUb1VuaXhTdGFtcChjaGVja0luRGF0ZSl9JmAgK1xuICAgIGBjaGVja091dERhdGU9JHtkYXRlVG9Vbml4U3RhbXAoY2hlY2tPdXREYXRlKX0mYCArXG4gICAgJ2Nvb3JkaW5hdGVzPTU5LjkzODYsMzAuMzE0MSc7XG5cbiAgaWYgKG1heFByaWNlICE9IG51bGwpIHtcbiAgICB1cmwgKz0gYCZtYXhQcmljZT0ke21heFByaWNlfWA7XG4gIH1cbiAgXG4gIHJldHVybiByZXNwb25zZVRvSnNvbihmZXRjaCh1cmwpKTtcbn1cbiJdfQ==